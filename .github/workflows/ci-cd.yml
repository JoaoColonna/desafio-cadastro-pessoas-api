name: Deploy to Heroku with Coverage Report

on:
  push:
    branches:
      - main

jobs:
  test-and-deploy:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        
    - name: Install dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
        
    - name: Run tests with coverage
      run: |
        dotnet test --configuration Release --no-build --verbosity normal \
          --collect:"XPlat Code Coverage" \
          --results-directory TestResults/ \
          --logger trx \
          --filter "FullyQualifiedName!~Integration" \
          -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        
    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool
        
    - name: Generate coverage report
      run: |
        reportgenerator \
          -reports:"TestResults/*/coverage.opencover.xml" \
          -targetdir:"docs/coverage" \
          -reporttypes:"Html;TextSummary;Badges" \
          -verbosity:Info
        
    - name: Display coverage summary
      run: |
        echo "📊 Coverage Report Summary:"
        cat docs/coverage/Summary.txt
        echo ""
        echo "🌐 Coverage report will be available at: https://joaocolonna.github.io/desafio-cadastro-pessoas-api/coverage/"
        echo "🎯 Goal: Maintain coverage above 80% when possible."
        
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: docs/coverage/

    - name: Deploy Coverage to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/coverage
        destination_dir: coverage

    - name: Install Heroku CLI
      run: |
        curl https://cli-assets.heroku.com/install.sh | sh

    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.14.15
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: "register-people-api"
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        usedocker: false