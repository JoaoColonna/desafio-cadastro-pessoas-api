name: Deploy to Heroku with Coverlet

on:
  push:
    branches:
      - main

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        
    - name: Install dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
        
    - name: Run tests with coverage
      run: |
        dotnet test --configuration Release --no-build --verbosity normal \
          --collect:"XPlat Code Coverage" \
          --results-directory TestResults/ \
          --logger trx \
          --filter "FullyQualifiedName!~Integration" \
          -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        
    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool
        
    - name: Generate coverage report
      run: |
        reportgenerator \
          -reports:"TestResults/*/coverage.opencover.xml" \
          -targetdir:"TestResults/CoverageReport" \
          -reporttypes:"Html;TextSummary" \
          -verbosity:Info
        
    - name: Display coverage summary
      run: cat TestResults/CoverageReport/Summary.txt
        
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: TestResults/CoverageReport/
        
    - name: Check coverage threshold (80%)
      run: |
        echo "Checking if coverage meets 80% threshold..."
        # O threshold já está configurado no .csproj, mas vamos verificar aqui também
        COVERAGE=$(grep -oP 'Line coverage: \K[\d.]+' TestResults/CoverageReport/Summary.txt | head -1)
        echo "Current coverage: ${COVERAGE}%"
        if (( $(echo "$COVERAGE >= 80" | bc -l) )); then
          echo "✅ Coverage threshold met: ${COVERAGE}% >= 80%"
        else
          echo "❌ Coverage threshold not met: ${COVERAGE}% < 80%"
          exit 1
        fi

    - name: Deploy to Heroku
      if: success()
      uses: akhileshns/heroku-deploy@v3.12.12
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        usedocker: false